@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
 # locationX:int
 # locationY:int
 # speedX:int
 # speedY:int
 # image:BufferedImage
 # width:int
 # height:int
 # isValid:boolean
 + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
 + forward():void
 + crash(AbstractFlyingObject flyingObject):boolean
 + setLocation(double locationX, double locationY):void
 + getLocationX():int
 + getLocationY():int
 + getSpeedX():int
 + getSpeedY():int
 + getImage():BufferedImage
 + getWidth():int
 + getHeight():int
 + notValid():boolean
 + vanish():void
}
abstract class AbstractAircraft
{
 # maxHp:int
 # hp:int
 # shootnum:int
 # power:int
 -shootMethod:ShootMethod
 + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp,shootnum,power)
 + decreaseHp(int decrease):void
 + getHp():int
 + getShootnum():int
 + setShootnum(int x):void
 + getPower():int
 + {abstract} shoot():List<BaseBullet>
 + setShootMethod(ShootMethod shootMethod):void
 + executeShoot():List<BaseBullet>
}

class HeroAircraft {
 - direction:int
 -{static}instance:HeroAircraft
 - HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
 + forward():void
 +increaseHp(int increase):void
 + shoot():List<BaseBullet>
 +{static}GetInstance():HeroAircraft
 +initial():void
 +increaseBullet():void
 +decreaseBullet():void
}
AbstractFlyingObject<|--AbstractAircraft
AbstractAircraft<|--HeroAircraft
HeroAircraft-->HeroAircraft
@enduml